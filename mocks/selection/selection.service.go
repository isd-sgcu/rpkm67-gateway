// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/selection/selection.service.go

// Package mock_selection is a generated GoMock package.
package mock_selection

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	apperror "github.com/isd-sgcu/rpkm67-gateway/apperror"
	dto "github.com/isd-sgcu/rpkm67-gateway/internal/dto"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateSelection mocks base method.
func (m *MockService) CreateSelection(req *dto.CreateSelectionRequest) (*dto.CreateSelectionResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSelection", req)
	ret0, _ := ret[0].(*dto.CreateSelectionResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// CreateSelection indicates an expected call of CreateSelection.
func (mr *MockServiceMockRecorder) CreateSelection(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSelection", reflect.TypeOf((*MockService)(nil).CreateSelection), req)
}

// FindByGroupIdSelection mocks base method.
func (m *MockService) FindByGroupIdSelection(req *dto.FindByGroupIdSelectionRequest) (*dto.FindByGroupIdSelectionResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByGroupIdSelection", req)
	ret0, _ := ret[0].(*dto.FindByGroupIdSelectionResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// FindByGroupIdSelection indicates an expected call of FindByGroupIdSelection.
func (mr *MockServiceMockRecorder) FindByGroupIdSelection(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByGroupIdSelection", reflect.TypeOf((*MockService)(nil).FindByGroupIdSelection), req)
}

// UpdateSelection mocks base method.
func (m *MockService) UpdateSelection(req *dto.UpdateSelectionRequest) (*dto.UpdateSelectionResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSelection", req)
	ret0, _ := ret[0].(*dto.UpdateSelectionResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// UpdateSelection indicates an expected call of UpdateSelection.
func (mr *MockServiceMockRecorder) UpdateSelection(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSelection", reflect.TypeOf((*MockService)(nil).UpdateSelection), req)
}
