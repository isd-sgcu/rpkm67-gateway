// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/stamp/stamp.service.go

// Package mock_stamp is a generated GoMock package.
package mock_stamp

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	apperror "github.com/isd-sgcu/rpkm67-gateway/apperror"
	dto "github.com/isd-sgcu/rpkm67-gateway/internal/dto"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// FindByUserId mocks base method.
func (m *MockService) FindByUserId(req *dto.FindByUserIdStampRequest) (*dto.FindByUserIdStampResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByUserId", req)
	ret0, _ := ret[0].(*dto.FindByUserIdStampResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// FindByUserId indicates an expected call of FindByUserId.
func (mr *MockServiceMockRecorder) FindByUserId(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByUserId", reflect.TypeOf((*MockService)(nil).FindByUserId), req)
}

// StampByUserId mocks base method.
func (m *MockService) StampByUserId(req *dto.StampByUserIdRequest) (*dto.StampByUserIdResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StampByUserId", req)
	ret0, _ := ret[0].(*dto.StampByUserIdResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// StampByUserId indicates an expected call of StampByUserId.
func (mr *MockServiceMockRecorder) StampByUserId(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StampByUserId", reflect.TypeOf((*MockService)(nil).StampByUserId), req)
}
