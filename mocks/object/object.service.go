// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/object/object.service.go

// Package mock_object is a generated GoMock package.
package mock_object

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	apperror "github.com/isd-sgcu/rpkm67-gateway/apperror"
	dto "github.com/isd-sgcu/rpkm67-gateway/internal/dto"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// DeleteByKey mocks base method.
func (m *MockService) DeleteByKey(req *dto.DeleteObjectRequest) (*dto.DeleteObjectResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByKey", req)
	ret0, _ := ret[0].(*dto.DeleteObjectResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// DeleteByKey indicates an expected call of DeleteByKey.
func (mr *MockServiceMockRecorder) DeleteByKey(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByKey", reflect.TypeOf((*MockService)(nil).DeleteByKey), req)
}

// FindByKey mocks base method.
func (m *MockService) FindByKey(req *dto.FindByKeyObjectRequest) (*dto.FindByKeyObjectResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByKey", req)
	ret0, _ := ret[0].(*dto.FindByKeyObjectResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// FindByKey indicates an expected call of FindByKey.
func (mr *MockServiceMockRecorder) FindByKey(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByKey", reflect.TypeOf((*MockService)(nil).FindByKey), req)
}

// Upload mocks base method.
func (m *MockService) Upload(req *dto.UploadObjectRequest) (*dto.UploadObjectResponse, *apperror.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Upload", req)
	ret0, _ := ret[0].(*dto.UploadObjectResponse)
	ret1, _ := ret[1].(*apperror.AppError)
	return ret0, ret1
}

// Upload indicates an expected call of Upload.
func (mr *MockServiceMockRecorder) Upload(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*MockService)(nil).Upload), req)
}
