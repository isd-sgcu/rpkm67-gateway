// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/user/user.handler.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	router "github.com/isd-sgcu/rpkm67-gateway/internal/router"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// FindOne mocks base method.
func (m *MockHandler) FindOne(c router.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "FindOne", c)
}

// FindOne indicates an expected call of FindOne.
func (mr *MockHandlerMockRecorder) FindOne(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOne", reflect.TypeOf((*MockHandler)(nil).FindOne), c)
}

// UpdatePicture mocks base method.
func (m *MockHandler) UpdatePicture(c router.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdatePicture", c)
}

// UpdatePicture indicates an expected call of UpdatePicture.
func (mr *MockHandlerMockRecorder) UpdatePicture(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePicture", reflect.TypeOf((*MockHandler)(nil).UpdatePicture), c)
}

// UpdateProfile mocks base method.
func (m *MockHandler) UpdateProfile(c router.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateProfile", c)
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockHandlerMockRecorder) UpdateProfile(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockHandler)(nil).UpdateProfile), c)
}
