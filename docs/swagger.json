{
    "swagger": "2.0",
    "info": {
        "description": "the RPKM67 API server.",
        "title": "RPKM67 API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3001",
    "basePath": "/api/v1",
    "paths": {
        "/auth/google-url": {
            "get": {
                "description": "get google login url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get Google login url",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetGoogleLoginUrlResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "get both new access token and refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token with refresh token",
                "parameters": [
                    {
                        "description": "refresh token",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Credential"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/auth/verify-google/{code}": {
            "get": {
                "description": "returns user's credential",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify Google login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code from google login",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyGoogleLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/checkin": {
            "post": {
                "description": "Create a check-in using email, event and user_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checkin"
                ],
                "summary": "Create a check-in",
                "parameters": [
                    {
                        "description": "Create CheckIn Request",
                        "name": "create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCheckInRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCheckInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/checkin/email/{email}": {
            "get": {
                "description": "Find check-ins by email",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checkin"
                ],
                "summary": "Find check-ins by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindByEmailCheckInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/checkin/{userId}": {
            "get": {
                "description": "Find check-ins by user_id",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checkin"
                ],
                "summary": "Find check-ins by user_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindByUserIdCheckInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/count": {
            "post": {
                "description": "Add 1 to count metrics by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "count"
                ],
                "summary": "Count clicks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the count metric",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        },
        "/stamp/{userId}": {
            "get": {
                "description": "Find stamp by user id",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stamp"
                ],
                "summary": "Find stamp by user id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FindByUserIdStampResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "Stamp by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stamp"
                ],
                "summary": "Stamp by user id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stamp by user id request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StampByUserIdBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.StampByUserIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.AppError": {
            "type": "object",
            "properties": {
                "httpCode": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.CheckIn": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.CountResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateCheckInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.CreateCheckInResponse": {
            "type": "object",
            "properties": {
                "checkin": {
                    "$ref": "#/definitions/dto.CheckIn"
                }
            }
        },
        "dto.Credential": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL3BiZX..."
                },
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "refresh_token": {
                    "type": "string",
                    "example": "e7e84d54-7518-4..."
                }
            }
        },
        "dto.FindByEmailCheckInResponse": {
            "type": "object",
            "properties": {
                "checkins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CheckIn"
                    }
                }
            }
        },
        "dto.FindByUserIdCheckInResponse": {
            "type": "object",
            "properties": {
                "checkins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CheckIn"
                    }
                }
            }
        },
        "dto.FindByUserIdStampResponse": {
            "type": "object",
            "properties": {
                "stamp": {
                    "$ref": "#/definitions/dto.Stamp"
                }
            }
        },
        "dto.GetGoogleLoginUrlResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dto.Stamp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "point_a": {
                    "type": "integer"
                },
                "point_b": {
                    "type": "integer"
                },
                "point_c": {
                    "type": "integer"
                },
                "point_d": {
                    "type": "integer"
                },
                "stamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.StampByUserIdBodyRequest": {
            "type": "object",
            "properties": {
                "activity_id": {
                    "type": "string"
                },
                "pin_code": {
                    "type": "string"
                }
            }
        },
        "dto.StampByUserIdResponse": {
            "type": "object",
            "properties": {
                "stamp": {
                    "$ref": "#/definitions/dto.Stamp"
                }
            }
        },
        "dto.VerifyGoogleLoginResponse": {
            "type": "object",
            "properties": {
                "credential": {
                    "$ref": "#/definitions/dto.Credential"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}